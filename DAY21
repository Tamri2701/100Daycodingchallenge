# PROBLEM 1-Given a sorted array arr and an integer k, find the position(0-based indexing) at which k is present in the array using binary search.

Note: If multiple occurrences are there, please return the smallest index.

class Solution:
    def binarysearch(self, arr, k):
        # Code Here
        left, right = 0, len(arr) - 1
        result = -1  # 

        while left <= right:
            mid = left + (right - left) // 2

            if arr[mid] == k:
                result = mid  
                right = mid - 1 
            elif arr[mid] < k:
                left = mid + 1
            else:
                right = mid - 1

        return result  # 

#PROBLEM 2-
Given an array arr[] of positive integers and an integer k, Your task is to return k largest elements in decreasing order. 

class Solution:
	def kLargest(self, arr, k):
		# Your code here
		 return sorted(arr, reverse=True)[:k]

